// Code generated by MockGen. DO NOT EDIT.
// Source: cthulhu/metrics (interfaces: Service)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MetricsService is a mock of Service interface
type MetricsService struct {
	ctrl     *gomock.Controller
	recorder *MetricsServiceMockRecorder
}

// MetricsServiceMockRecorder is the mock recorder for MetricsService
type MetricsServiceMockRecorder struct {
	mock *MetricsService
}

// NewMetricsService creates a new mock instance
func NewMetricsService(ctrl *gomock.Controller) *MetricsService {
	mock := &MetricsService{ctrl: ctrl}
	mock.recorder = &MetricsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MetricsService) EXPECT() *MetricsServiceMockRecorder {
	return m.recorder
}

// IncUpdatesTotal mocks base method
func (m *MetricsService) IncUpdatesTotal(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncUpdatesTotal", arg0, arg1)
}

// IncUpdatesTotal indicates an expected call of IncUpdatesTotal
func (mr *MetricsServiceMockRecorder) IncUpdatesTotal(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncUpdatesTotal", reflect.TypeOf((*MetricsService)(nil).IncUpdatesTotal), arg0, arg1)
}

// ObserveTasksDuration mocks base method
func (m *MetricsService) ObserveTasksDuration(arg0 string, arg1 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ObserveTasksDuration", arg0, arg1)
}

// ObserveTasksDuration indicates an expected call of ObserveTasksDuration
func (mr *MetricsServiceMockRecorder) ObserveTasksDuration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObserveTasksDuration", reflect.TypeOf((*MetricsService)(nil).ObserveTasksDuration), arg0, arg1)
}

// ObserveUpdatesDuration mocks base method
func (m *MetricsService) ObserveUpdatesDuration(arg0 string, arg1 float64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ObserveUpdatesDuration", arg0, arg1)
}

// ObserveUpdatesDuration indicates an expected call of ObserveUpdatesDuration
func (mr *MetricsServiceMockRecorder) ObserveUpdatesDuration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObserveUpdatesDuration", reflect.TypeOf((*MetricsService)(nil).ObserveUpdatesDuration), arg0, arg1)
}
